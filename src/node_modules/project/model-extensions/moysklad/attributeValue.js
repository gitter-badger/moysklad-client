/**
 * attributeValue
 * Date: 28.05.15
 * Vitaliy V. Makeev (w.makeev@gmail.com)
 */

var _ = require('lodash');
var tools = require('project/tools');

module.exports = function (typeName, map, client) {

    var attributeFields = _(map.typeInfos['moysklad.attributeValue'].propertyInfos)
        .map('name')
        .pull('metadataUuid')
        .value();

    var attrTypeToFieldName = {
        "STRING"        : "valueString",
        "LONG"          : "longValue",
        "TIME"          : "timeValue",
        "ID_CUSTOM"     : "entityValueUuid",
        "FILE"          : "file",
        "DOUBLE"        : "doubleValue",
        "BOOLEAN"       : "booleanValue",
        "ID_EMBEDDED"   : "ID_EMBEDDED",
        "TEXT"          : "valueText",
        "LINK"          : "valueText"
    };

    var getAttrDataFieldName = function (attrValue) {
        // Метаданные загружены
        if (client.metadata) {
            var attributeMetadata = client.metadata.attributeMetadataByUuid[attrValue.metadataUuid];
            var attrType = attributeMetadata.attrType;
            if (attrType === 'ID_EMBEDDED') {
                var dictionaryMetadata = client.metadata
                    .embeddedEntityMetadataByUuid[attributeMetadata.dictionaryMetadataUuid];
                return dictionaryMetadata.name.toLowerCase() + 'ValueUuid';

            } else {
                return attrTypeToFieldName[attrType];
            }
        }
        // Метаданные не загружены
        else {
            var fieldName = _.find(attributeFields, function (fieldName) {
                return fieldName in attrValue;
            });

            if (!fieldName)
                throw new Error(
                    'Can not find attribute data field, set it manually ' +
                    'or load metadata with client.loadMetadata()');

            return fieldName;
        }
    };

    return {
        methods: {
            getValue: function () {
                var fieldName = getAttrDataFieldName(this);
                if (fieldName) return this[fieldName];
                else return null;
            },
            setValue: function (value) {
                var fieldName = getAttrDataFieldName(this);
                if (fieldName) this[fieldName] = value;
                else throw new Error(
                        'Can not find attribute data field, set it manually ' +
                        'or load metadata with client.loadMetadata()');
                return this;
            }
        }
    }
};