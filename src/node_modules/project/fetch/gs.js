/**
 * Google Script Http request provider factory
 * Date: 11.01.14
 * Vitaliy V. Makeev (w.makeev@gmail.com)
 */

var _                 = require('lodash')
    , callbackAdapter = require('./../../../tools/callbackAdapter')
    , Queue           = require('./queue')
    , log             = require('project/logger');

var queue = new Queue({
    async: false
});

var fetch = {

    fetch: function (options, callback) {

        ['requestPeriod', 'requestsPerPeriod', 'parallelTaskCount']
            .forEach(function (opt) {
                if (options[opt] && queue[opt] !== options[opt]) {
                    queue[opt] = options[opt]
                }
            });

        var _options = {
            //contentType: 'application/x-www-form-urlencoded',
            method: 'GET',
            muteHttpExceptions: true
        };
        _.extend(_options, options);

        var response, httpResponse, err;

        try {
            queue.addTask(function (cb) {
                httpResponse = UrlFetchApp.fetch(_options.url, _options);
                cb();
            })
        }
        catch (e) {
            err = e;
        }

        if (!err) {
            response = {
                headers         : httpResponse.getAllHeaders(),
                contentText     : httpResponse.getContentText(),
                responseCode    : httpResponse.getResponseCode()
            };
        }

        var result = {
            response: response,
            request: _options
        };

        return callbackAdapter(err, result, callback);
    }
};

module.exports = fetch;
