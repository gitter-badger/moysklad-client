/**
 * fixDateTime
 * Date: 10.08.14
 * Vitaliy V. Makeev (w.makeev@gmail.com)
 */

var _ = require('lodash');

// Реализация класса Jsonix.Schema.XSD.DateTime без учета временных зон
var fixDateTime = function (Jsonix) {
    Jsonix.Schema.XSD.DateTime
        = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {
        name : 'DateTime',
        typeName : Jsonix.Schema.XSD.qname('dateTime'),
        parse : function(value) {
            var calendar = this.parseDateTime(value);
            var date = new Date();
            date.setFullYear(calendar.year);
            date.setMonth(calendar.month - 1);
            date.setDate(calendar.day);
            date.setHours(calendar.hour);
            date.setMinutes(calendar.minute);
            date.setSeconds(calendar.second);
            if (Jsonix.Util.Type.isNumber(calendar.fractionalSecond)) {
                date.setMilliseconds(Math.floor(1000 * calendar.fractionalSecond));
            }


            return date;
        },
        print : function(value) {
            Jsonix.Util.Ensure.ensureDate(value);
            return this.printDateTime(new Jsonix.XML.Calendar({
                year : value.getFullYear(),
                month : value.getMonth() + 1,
                day : value.getDate(),
                hour : value.getHours(),
                minute : value.getMinutes(),
                second : value.getSeconds(),
                fractionalSecond : (value.getMilliseconds() / 1000)
            }));
        },
        isInstance : function(value) {
            return Jsonix.Util.Type.isDate(value);
        },
        CLASS_NAME : 'Jsonix.Schema.XSD.DateTime'
    });

    Jsonix.Schema.XSD.DateTime.INSTANCE
        = new Jsonix.Schema.XSD.DateTime();

    Jsonix.Schema.XSD.DateTime.INSTANCE.LIST
        = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.DateTime.INSTANCE);

    _.remove(Jsonix.Context.prototype.builtinTypeInfos, function (typeInfo) {
        return typeInfo.CLASS_NAME === 'Jsonix.Schema.XSD.DateTime'
    });

    Jsonix.Context.prototype.builtinTypeInfos.push(Jsonix.Schema.XSD.DateTime.INSTANCE);
};

module.exports = fixDateTime;